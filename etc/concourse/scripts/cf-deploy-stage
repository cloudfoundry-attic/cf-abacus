#!/bin/bash

set -e

SCRIPT_DIR="${BASH_SOURCE%/*}"
source $SCRIPT_DIR/common-functions

if [ "$SKIP_SSL_VALIDATION" == "true" ]; then
  skip='--skip-ssl-validation'
fi

echo "Logging to $CF_SYS_DOMAIN ..."
cf login -a https://api.$CF_SYS_DOMAIN -u $CF_USER -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE $skip

echo "Pushing $ABACUS_PROFILE Abacus installation ..."
pushd built-project
  yarn run cfstage $ABACUS_PROFILE

  reportingApps=$(node_modules/abacus-etc/apprc lib/aggregation/reporting/.apprc $ABACUS_PROFILE APPS)

  echo "Mapping routes ..."
  mapRoutes ${ABACUS_PREFIX}abacus-usage-reporting $reportingApps $CF_DOMAIN

  echo "Map location header url to meter app..."
  cf map-route "${ABACUS_PREFIX}abacus-usage-meter" "$CF_SYS_DOMAIN" --hostname "${ABACUS_PREFIX}abacus-usage-collector" --path 'v1/metering/collected/usage/t'

popd


if [ "$BIND_DB_SERVICE" == "true" ]; then
  echo "Binding services ..."

  bindGroupToService ${ABACUS_PREFIX}abacus-usage-collector $DB_COLLECTOR
  bindGroupToService ${ABACUS_PREFIX}abacus-usage-meter $DB_METER
  bindGroupToService ${ABACUS_PREFIX}abacus-usage-accumulator $DB_ACCUMULATOR
  bindGroupToService ${ABACUS_PREFIX}abacus-usage-aggregator $DB_AGGREGATOR
  bindGroupToService ${ABACUS_PREFIX}abacus-usage-reporting $DB_ACCUMULATOR
  bindGroupToService ${ABACUS_PREFIX}abacus-usage-reporting $DB_AGGREGATOR
  bindGroupToService ${ABACUS_PREFIX}abacus-cf-renewer $DB_BRIDGE
  bindGroupToService ${ABACUS_PREFIX}abacus-services-bridge $DB_BRIDGE
  bindGroupToService ${ABACUS_PREFIX}abacus-applications-bridge $DB_BRIDGE
  bindGroupToService ${ABACUS_PREFIX}abacus-account-plugin $DB_PLUGINS
  bindGroupToService ${ABACUS_PREFIX}abacus-provisioning-plugin $DB_PLUGINS
  bindGroupToService ${ABACUS_PREFIX}abacus-eureka-plugin $DB_PLUGINS
  bindGroupToService ${ABACUS_PREFIX}abacus-housekeeper $DB_METER
  bindGroupToService ${ABACUS_PREFIX}abacus-housekeeper $DB_ACCUMULATOR
  bindGroupToService ${ABACUS_PREFIX}abacus-housekeeper $DB_AGGREGATOR
  bindGroupToService ${ABACUS_PREFIX}abacus-housekeeper $DB_BRIDGE
  bindGroupToService ${ABACUS_PREFIX}abacus-housekeeper $DB_PLUGINS
  bindGroupToService ${ABACUS_PREFIX}abacus-service-dashboard $DB_DASHBOARD

fi

bindAppToService ${ABACUS_PREFIX}abacus-usage-collector $RABBIT_INSTANCE_NAME
bindAppToService ${ABACUS_PREFIX}abacus-usage-meter $RABBIT_INSTANCE_NAME

