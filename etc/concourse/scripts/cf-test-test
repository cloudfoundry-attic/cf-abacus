#!/bin/bash

set -e

SCRIPT_DIR="${BASH_SOURCE%/*}"
source $SCRIPT_DIR/common-functions

# Download CF CLI
mkdir -p bin/.cf
(cd bin/.cf && curl -L "https://cli.run.pivotal.io/stable?release=linux64-binary&source=github" | tar -zx)
export PATH=$PATH:$(pwd)/bin/.cf

echo "Logging to CF ..."

if [ "$SKIP_SSL_VALIDATION" == "true" ]; then
  skip='--skip-ssl-validation'
fi

cf api https://api.$CF_SYS_DOMAIN $skip
cf login -u $CF_USER -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE

export ORG_GUID=$(cf org $CF_ORG --guid)

echo "Runnining custom configuration ..."
config_dir=$CONFIG_DIR
project_dir=$PROJECT_DIR
./$project_dir/etc/concourse/scripts/configure $config_dir
cp -R $config_dir/* $project_dir

pushd $project_dir
  echo "Building Abacus ..."
  yarn run provision

  echo "Deleting all apps in $CF_ORG/$CF_SPACE ..."
  getApps
  echo ${APPS[@]} | xargs -n1 | xargs -P 20 -i cf delete -f -r {}


  cf login -u $CF_USER -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE

  echo "Deploying Abacus ..."
  yarn run cfstage medium


  set +e
  echo "Start all apps in $CF_ORG/$CF_SPACE ..."
  getApps
  echo ${APPS[@]} | xargs -n1 | xargs -P 5 -i cf start {}

  echo "Restarting failed apps ..."
  restartAppsWithRetry

  echo "Mapping routes ..."
  collectorApps=$(node_modules/abacus-etc/apprc lib/metering/collector/.apprc $ABACUS_PROFILE APPS)
  reportingApps=$(node_modules/abacus-etc/apprc lib/aggregation/reporting/.apprc $ABACUS_PROFILE APPS)

  mapRoutes ${ABACUS_PREFIX}abacus-usage-collector $collectorApps $CF_DOMAIN
  mapRoutes ${ABACUS_PREFIX}abacus-usage-reporting $reportingApps $CF_DOMAIN

  echo "Storing default plans and mappings in provisioning..."
  ./etc/concourse/scripts/run-cf-task "abacus-provisioning-plugin" "yarn run store-defaults"

  cf login -u $CF_USER -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE

  echo "Running smoke test ..."
  yarn run smoke \
  --collector https://${ABACUS_PREFIX}abacus-usage-collector.$CF_DOMAIN \
  --reporting https://${ABACUS_PREFIX}abacus-usage-reporting.$CF_DOMAIN

popd
