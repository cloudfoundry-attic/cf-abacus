#!/bin/bash

set -e -x

echo "Environment:"
env | sort

SCRIPT_DIR="${BASH_SOURCE%/*}"
source $SCRIPT_DIR/common-functions

if [ "$SKIP_SSL_VALIDATION" == "true" ]; then
  skip='--skip-ssl-validation'
  insecure='--insecure'
fi

echo "Logging to $CF_SYS_DOMAIN as admin ..."
cf api $skip "https://api.$CF_SYS_DOMAIN"

echo "" | cf login $skip -u "$CF_ADMIN_USER" -p "$CF_ADMIN_PASSWORD"

echo "Recreating organization and space ..."
cf create-quota "$CF_ORG" -m 80g -i 4g -r 80 -s 10 --allow-paid-service-plans
cf update-quota "$CF_ORG" -m 80g -i 4g -r 80 -s 10 --allow-paid-service-plans
cf create-org "$CF_ORG" -q "$CF_ORG"
cf create-space "$CF_SPACE" -o "$CF_ORG"
if [ "$ENABLE_SERVICE_ACCESS" == "true" ]; then
  cf enable-service-access "$DB_SERVICE_NAME" -p "$DB_PLAN_NAME" -o "$CF_ORG"
fi

echo "Recreating user ..."
cf create-user "$CF_USER" "$CF_PASSWORD"
cf set-org-role "$CF_USER" "$CF_ORG" OrgManager
cf set-space-role "$CF_USER" "$CF_ORG" "$CF_SPACE" SpaceManager
cf set-space-role "$CF_USER" "$CF_ORG" "$CF_SPACE" SpaceDeveloper

if [ "$BIND_SECURITY_GROUP" == "true" ]; then
  $SCRIPT_DIR/bind-security-group
fi

echo "Logging to $CF_SYS_DOMAIN as abacus user ..."
cf login $skip -a "https://api.$CF_SYS_DOMAIN" -u "$CF_USER" -p "$CF_PASSWORD" -o "$CF_ORG" -s "$CF_SPACE"

if [ "$CREATE_DB_SERVICE" == "true" ]; then
  echo "Creating or updating DB service instances ..."
  instances=($DB_SERVICE_INSTANCES)
  for instance in "${instances[@]}"; do
    args=(${instance//:/ })
    createOrUpdateService ${args[0]} ${args[1]} &
  done;
  waitForServices ${#instances[@]}
else
  echo "Using DB URL provided in abacus-config !"
fi

if [ "$PURGE_APP_USAGE_EVENTS" == "true" ]; then
  $SCRIPT_DIR/create-uaa-clients

  echo "Purging app-usage events ..."
  TOKEN=$(curl $insecure --user $CC_CLIENT_ID:$CC_CLIENT_SECRET -s "https://uaa.$CF_SYS_DOMAIN/oauth/token?grant_type=client_credentials" | jq -r .access_token)
  if [ "$TOKEN" == "null" -o -z "$TOKEN" ]; then
    echo "Cannot obtain token for access to CF API !"
    exit 1
  fi
  RESPONSE_CODE=$(curl $insecure -s -o /dev/null -w "%{http_code}" -X POST -H "Authorization: bearer $TOKEN" -i "https://api.$CF_SYS_DOMAIN/v2/app_usage_events/destructively_purge_all_and_reseed_started_apps")
  if [ "$RESPONSE_CODE" == "204" ]; then
    echo "App events purged successfully"
  else
    echo "Purging failed with reposnse code: $RESPONSE_CODE"
    exit 1
  fi
fi

if [ -e "landscape/abacus-config/deploy/bin/post-infra" ]; then
  echo "Running post-infra script ..."
  landscape/abacus-config/deploy/bin/post-infra
fi

echo ""
echo "Finished setting up infrastructure."
