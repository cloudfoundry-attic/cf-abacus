#!/bin/bash

set -e

case "$CI_TEST" in
  itest)
    # Based on default limits in throttle and batch processing and
    # integration test matrix, we would need 2197 (= 13 * 13 * 13)
    # usage submissions to get above 90 percent regression coverage

    npm run itest -- -o 4 -i 4 -u 4 $@
    ;;

  extended)
    # Run dupe test without security
    npm start
    sleep 3s
    npm run dupe -- --synthetic
    npm stop

    # Run smoke test
    npm start
    sleep 3s
    npm run smoke
    npm stop

    # Run demo and smoke tests without security
    npm start
    sleep 3s
    npm run demo
    npm run smoke
    npm stop

    # Run demo test with the smalldb config
    npm start smalldb
    sleep 3s
    npm run demo
    npm stop

    ;;

  perf)
    # Run perf test without security
    npm start
    sleep 3s
    npm run perf -- -o 4 -i 4 -u 4 $@
    npm stop

    # Run perf test with security
    export SECURED=true
    export JWTKEY=encode
    export JWTALGO=HS256
    npm start
    sleep 3s
    npm run perf -- -o 4 -i 4 -u 4 $@
    npm stop

    # Test for concurrency
    npm start small
    sleep 6s
    npm run perf -- -o 1 -i 8 -u 8 $@
    npm stop
    ;;

  *)
    echo "Unknown test $CI_SUITE"
    ;;

esac
